services:
  # Meilisearch - Search engine
  meilisearch:
    image: getmeili/meilisearch:v1.11
    container_name: kidsearch-meilisearch
    restart: unless-stopped
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: ${MEILI_KEY:-masterKey}
      MEILI_ENV: ${MEILI_ENV:-production}
      MEILI_NO_ANALYTICS: true
    volumes:
      - meilisearch-data:/meili_data
    networks:
      - kidsearch-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  embeddings_small:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.8.1
    container_name: embeddings_small
    restart: unless-stopped
    ports:
      - "8081:80"
    networks:
      - kidsearch-network
    environment:
      # Pas de MODEL_ID, NUM_THREADS, etc. - voir ci-dessous
      HF_HUB_DISABLE_TELEMETRY: "1"
      PYTHONPATH: "/app:/app/dashboard"
    command:
      - "--model-id"
      - "intfloat/multilingual-e5-small"
      - "--port"
      - "80"
      - "--max-concurrent-requests"
      - "16"
      - "--max-batch-tokens"
      - "16384"
    volumes:
      # Cache local pour éviter de re-télécharger le modèle à chaque run
      - ./models_cache:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s  # Le téléchargement du modèle prend du temps

  # KidSearch Dashboard & API (All-in-one)
  kidsearch-all:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kidsearch-all
    restart: unless-stopped
    ports:
      - "8501:8501"  # Dashboard
      - "8080:8080"  # API
    environment:
      SERVICE: all
      LOG_LEVEL: debug
      DASHBOARD_PORT: 8501
      DASHBOARD_HOST: 0.0.0.0
      DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD:-}
      API_PORT: 8080
      API_HOST: 0.0.0.0
      API_WORKERS: 4
      API_ENABLED: "true"
      # Display URLs (for clickable links in logs)
      DISPLAY_HOST: ${DISPLAY_HOST:-}
      DASHBOARD_DISPLAY_HOST: ${DASHBOARD_DISPLAY_HOST:-}
      API_DISPLAY_HOST: ${API_DISPLAY_HOST:-}
      # Meilisearch connection
      MEILI_URL: http://meilisearch:7700
      MEILI_KEY: ${MEILI_KEY:-masterKey}
      INDEX_NAME: ${INDEX_NAME:-kidsearch}

      # --- Embedding & Reranking Configuration ---
      # Provider: 'huggingface', 'gemini', or 'none'
      EMBEDDING_PROVIDER: ${EMBEDDING_PROVIDER:-huggingface}
      
      # HuggingFace model name (used for info, API provides actual model)
      HUGGINGFACE_MODEL: ${HUGGINGFACE_MODEL:-intfloat/multilingual-e5-small}
      # URL for the embedding service (small model)
      HUGGINGFACE_API_URL: ${HUGGINGFACE_API_URL:-http://embeddings_small:80/embed}

      # Reranking configuration
      RERANKING_ENABLED: ${RERANKING_ENABLED:-true}
      # URL for the reranking service (medium model)
      RERANKER_API_URL: ${RERANKER_API_URL:-http://embeddings_small:80/embed}
      # Reranker model name (for info)
      RERANKER_MODEL: ${RERANKER_MODEL:-intfloat/multilingual-e5-.env.example small}
      
      # Weights for reranking
      MEILISEARCH_WEIGHT: ${MEILISEARCH_WEIGHT:-0.7}
      CSE_WEIGHT: ${CSE_WEIGHT:-0.3}
      
      # --- Google APIs ---
      GOOGLE_CSE_API_KEY: ${GOOGLE_CSE_API_KEY:-}
      GOOGLE_CSE_ID: ${GOOGLE_CSE_ID:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-} # Used if EMBEDDING_PROVIDER is 'gemini'

      # --- Wiki API ---
      WIKI_API_URL: ${WIKI_API_URL:-https://fr.vikidia.org/w/api.php}
      WIKI_SITE_URL: ${WIKI_SITE_URL:-https://fr.vikidia.org/wiki/}
      WIKI_SITE_NAME: ${WIKI_SITE_NAME:-Vikidia}

    volumes:
      - ./data:/app/data
      - ./.streamlit:/app/.streamlit
      - ./config:/app/config
    networks:
      - kidsearch-network
    depends_on:
      meilisearch:
        condition: service_healthy
      embeddings_small:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Alternative: Dashboard only
  # Uncomment to run Dashboard in a separate container
  # kidsearch-dashboard:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: kidsearch-dashboard
  #   restart: unless-stopped
  #   ports:
  #     - "8501:8501"
  #   environment:
  #     SERVICE: dashboard
  #     DASHBOARD_PORT: 8501
  #     DASHBOARD_HOST: 0.0.0.0
  #     DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD:-}
  #     MEILI_URL: http://meilisearch:7700
  #     MEILI_KEY: ${MEILI_KEY:-masterKey}
  #     INDEX_NAME: ${INDEX_NAME:-kidsearch}
  #   volumes:
  #     - ./data:/app/data
  #     - ./config:/app/config
  #   networks:
  #     - kidsearch-network
  #   depends_on:
  #     - meilisearch

  # Alternative: API only
  # Uncomment to run API in a separate container
  # kidsearch-api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: kidsearch-api
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     SERVICE: api
  #     API_PORT: 8080
  #     API_HOST: 0.0.0.0
  #     API_WORKERS: 4
  #     API_ENABLED: "true"
  #     MEILI_URL: http://meilisearch:7700
  #     MEILI_KEY: ${MEILI_KEY:-masterKey}
  #     INDEX_NAME: ${INDEX_NAME:-kidsearch}
  #     RERANKING_ENABLED: ${RERANKING_ENABLED:-false}
  #   volumes:
  #     - ./data:/app/data
  #   networks:
  #     - kidsearch-network
  #   depends_on:
  #     - meilisearch

volumes:
  meilisearch-data:
    driver: local

networks:
  kidsearch-network:
    driver: bridge
