services:
  # Meilisearch - Search engine
  meilisearch:
    image: getmeili/meilisearch:v1.24.0
    container_name: kidsearch-meilisearch
    restart: unless-stopped
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: ${MEILI_KEY:-masterKey}
      MEILI_NO_ANALYTICS: true
      # Optimized for 6GB RAM
      MEILI_MAX_INDEXING_MEMORY: 512MB
      MEILI_MAX_INDEXING_THREADS: 2
    volumes:
      # Use Docker volume instead of hardcoded Synology path
      - ./meili_data:/meili_data
    networks:
      - kidsearch-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  embeddings_small:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.8.2
    container_name: embeddings_small
    restart: unless-stopped
    networks:
      - kidsearch-network
    environment:
      HF_HUB_DISABLE_TELEMETRY: "1"
      RAYON_NUM_THREADS: "2"
      OMP_NUM_THREADS: "2"
    ports:
      - "8090:80"
    command:
      - "--model-id"
      - "sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2"
      - "--port"
      - "80"
      - "--pooling"
      - "mean"
    volumes:
      - ./models_cache:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # KidSearch Dashboard & API (All-in-one)
  kidsearch-all:
    image: gandulf78/kidsearch:latest
    container_name: kidsearch-all
    restart: unless-stopped
    ports:
      - "8501:8501"  # Dashboard
      - "8082:8080"  # API
    dns:
      - 1.1.1.3
      - 1.0.0.3
    extra_hosts:
      - "${OIDC_HOST_ENTRY}"
      - "${KIDSEARCH_API_HOST_ENTRY}"
    environment:
      SERVICE: all
      LOG_LEVEL: ${LOG_LEVEL:-info}  # Use info by default, not debug
      API_ENABLED: "true"
      API_WORKERS: ${API_WORKERS:-2}

      # --- Authentication Configuration ---
      # Disable auth entirely (optional)
      AUTH_DISABLED: ${AUTH_DISABLED:-false}

      # Configure which auth providers to enable (comma-separated: oidc,google,github,simple)
      AUTH_PROVIDERS: ${AUTH_PROVIDERS:-}

      # OpenID Connect (OIDC) - Compatible with Pocket ID, Authentik, Keycloak, etc.
      OIDC_ISSUER: ${OIDC_ISSUER:-}
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID:-}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET:-}
      OIDC_REDIRECT_URI: ${OIDC_REDIRECT_URI:-http://localhost:8501/}
      OIDC_SCOPES: ${OIDC_SCOPES:-openid profile email}
      OIDC_API_REDIRECT_URI: ${OIDC_API_REDIRECT_URI:-http://localhost:8082/api/auth/callback}

      # Optional: Manual OIDC endpoint configuration (auto-discovered if not set)
      OIDC_AUTHORIZE_URL: ${OIDC_AUTHORIZE_URL:-}
      OIDC_TOKEN_URL: ${OIDC_TOKEN_URL:-}
      OIDC_USERINFO_URL: ${OIDC_USERINFO_URL:-}

      # Simple password auth
      DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD:-}

      # Authorized users
      ALLOWED_EMAILS: ${ALLOWED_EMAILS:-}

      # Google OAuth
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID:-}
      GOOGLE_OAUTH_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET:-}
      GOOGLE_OAUTH_REDIRECT_URI: ${GOOGLE_OAUTH_REDIRECT_URI:-http://localhost:8501/}
      GOOGLE_OAUTH_AUTHORIZE_URL: ${GOOGLE_OAUTH_AUTHORIZE_URL:-https://accounts.google.com/o/oauth2/v2/auth}
      GOOGLE_OAUTH_TOKEN_URL: ${GOOGLE_OAUTH_TOKEN_URL:-https://oauth2.googleapis.com/token}

      # GitHub OAuth
      GITHUB_OAUTH_CLIENT_ID: ${GITHUB_OAUTH_CLIENT_ID:-}
      GITHUB_OAUTH_CLIENT_SECRET: ${GITHUB_OAUTH_CLIENT_SECRET:-}
      GITHUB_OAUTH_REDIRECT_URI: ${GITHUB_OAUTH_REDIRECT_URI:-http://localhost:8501/}
      GITHUB_OAUTH_AUTHORIZE_URL: ${GITHUB_OAUTH_AUTHORIZE_URL:-https://github.com/login/oauth/authorize}
      GITHUB_OAUTH_TOKEN_URL: ${GITHUB_OAUTH_TOKEN_URL:-https://github.com/login/oauth/access_token}

      # JWT Configuration (for API)
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-change-me-in-production}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      JWT_EXPIRATION_MINUTES: ${JWT_EXPIRATION_MINUTES:-1440}

      # Frontend URL of Google CSE
      FRONTEND_URL: ${FRONTEND_URL:-}

      # Display URLs
      DISPLAY_HOST: ${DISPLAY_HOST:-}
      DASHBOARD_DISPLAY_HOST: ${DASHBOARD_DISPLAY_HOST:-}
      API_DISPLAY_HOST: ${API_DISPLAY_HOST:-}

      # Meilisearch connection
      MEILI_URL: http://meilisearch:7700
      MEILI_KEY: ${MEILI_KEY:-masterKey}
      INDEX_NAME: ${INDEX_NAME:-kidsearch}

      # --- Embedding Configuration ---
      EMBEDDING_PROVIDER: ${EMBEDDING_PROVIDER:-huggingface}
      HUGGINGFACE_MODEL: ${HUGGINGFACE_MODEL:-sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2}
      HUGGINGFACE_API_URL: ${HUGGINGFACE_API_URL:-http://embeddings_small:80/embed}
      HUGGINGFACE_EMBEDDING_BATCH_SIZE: ${HUGGINGFACE_EMBEDDING_BATCH_SIZE:-6}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      GEMINI_EMBEDDING_BATCH_SIZE: ${GEMINI_EMBEDDING_BATCH_SIZE:-20}
      EMBEDDING_BATCH_DELAY: ${EMBEDDING_BATCH_DELAY:-2}

      # --- Reranking Configuration (Optimized for DS220+ 6GB RAM) ---
      RERANKING_ENABLED: ${RERANKING_ENABLED:-true}
      RERANKER_API_URL: ${RERANKER_API_URL:-http://embeddings_small:80/embed}
      RERANKER_MODEL: ${RERANKER_MODEL:-sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2}
      RERANKER_BATCH_SIZE: ${RERANKER_BATCH_SIZE:-3}
      RERANKER_MAX_CHARS: ${RERANKER_MAX_CHARS:-200}
      RERANKER_CACHE_SIZE: ${RERANKER_CACHE_SIZE:-4096}
      RERANKER_TIMEOUT: ${RERANKER_TIMEOUT:-12}

      # Weights for result merging
      MEILISEARCH_WEIGHT: ${MEILISEARCH_WEIGHT:-0.7}
      CSE_WEIGHT: ${CSE_WEIGHT:-0.3}

      # --- Google APIs ---
      GOOGLE_CSE_API_KEY: ${GOOGLE_CSE_API_KEY:-}
      GOOGLE_CSE_ID: ${GOOGLE_CSE_ID:-}

      # --- Wiki API (Vikidia) ---
      WIKI_API_URL: ${WIKI_API_URL:-https://fr.vikidia.org/w/api.php}
      WIKI_SITE_URL: ${WIKI_SITE_URL:-https://fr.vikidia.org/wiki/}
      WIKI_SITE_NAME: ${WIKI_SITE_NAME:-Vikidia}

    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./streamlit:/app/.streamlit
    networks:
      - kidsearch-network
    depends_on:
      meilisearch:
        condition: service_healthy
      embeddings_small:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  kidsearch-network:
    driver: bridge